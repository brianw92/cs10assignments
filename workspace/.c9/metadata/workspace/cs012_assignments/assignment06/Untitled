{"changed":true,"filter":false,"title":"Untitled","tooltip":"/cs012_assignments/assignment06/Untitled","value":"#include <iostream>\n#include <cstdlib>\n#include \"IntList.h\"\n\nusing namespace std;\n\nIntList::IntList() // DONE\n{\n    head = 0;\n    tail = 0;\n}\n\nIntList::~IntList()\n{\n    IntNode *temp;\n    \n    while (head != 0)\n    {\n        temp = head->next;\n        \n        delete head;\n        \n        head = temp;\n    }\n}\n\nvoid IntList::display() const\n{\n    // This function displays to a single line all of the int values stored in the list, \n    // each separated by a space. It should NOT output a newline or space at the end.\n    \n    if (head != 0)\n    {\n        IntNode *temp;\n    \n        temp = head;\n    \n        while (temp != 0)\n        {\n            if (temp != tail)\n            {\n                cout << temp->data << ' ';\n            }\n            else\n            {\n                cout << temp->data;\n            }\n            temp = temp->next;\n        }\n    }\n}\n\nvoid IntList::push_front(int value)\n{\n    if (head == 0)\n    {\n        IntNode *newVal = new IntNode(value);\n        \n        newVal->next = 0;\n        \n        head = newVal;\n        tail = newVal;\n    }\n    \n    else if (head == tail)\n    {\n        IntNode *newVal = new IntNode(value);\n        \n        newVal->next = tail;\n        \n        head = newVal;\n    }\n    \n    else\n    {\n        IntNode *newVal = new IntNode(value);\n    \n        newVal->next = head;\n    \n        head = newVal;\n    }\n}\n\n\nvoid IntList::pop_front()\n{\n    if (head == 0) return;\n    \n    IntNode *byebyeVal = head;\n    \n    head = head->next;\n    \n    delete byebyeVal;\n}","undoManager":{"stack":[[{"start":{"row":0,"column":0},"end":{"row":93,"column":1},"action":"insert","lines":["#include <iostream>","#include <cstdlib>","#include \"IntList.h\"","","using namespace std;","","IntList::IntList() // DONE","{","    head = 0;","    tail = 0;","}","","IntList::~IntList()","{","    IntNode *temp;","    ","    while (head != 0)","    {","        temp = head->next;","        ","        delete head;","        ","        head = temp;","    }","}","","void IntList::display() const","{","    // This function displays to a single line all of the int values stored in the list, ","    // each separated by a space. It should NOT output a newline or space at the end.","    ","    if (head != 0)","    {","        IntNode *temp;","    ","        temp = head;","    ","        while (temp != 0)","        {","            if (temp != tail)","            {","                cout << temp->data << ' ';","            }","            else","            {","                cout << temp->data;","            }","            temp = temp->next;","        }","    }","}","","void IntList::push_front(int value)","{","    if (head == 0)","    {","        IntNode *newVal = new IntNode(value);","        ","        newVal->next = 0;","        ","        head = newVal;","        tail = newVal;","    }","    ","    else if (head == tail)","    {","        IntNode *newVal = new IntNode(value);","        ","        newVal->next = tail;","        ","        head = newVal;","    }","    ","    else","    {","        IntNode *newVal = new IntNode(value);","    ","        newVal->next = head;","    ","        head = newVal;","    }","}","","","void IntList::pop_front()","{","    if (head == 0) return;","    ","    IntNode *byebyeVal = head;","    ","    head = head->next;","    ","    delete byebyeVal;","}"],"id":1}]],"mark":-1,"position":0},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":93,"column":1},"end":{"row":93,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1432187708436}