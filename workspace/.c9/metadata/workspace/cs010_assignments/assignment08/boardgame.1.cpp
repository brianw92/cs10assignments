{"filter":false,"title":"boardgame.1.cpp","tooltip":"/cs010_assignments/assignment08/boardgame.1.cpp","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":36,"column":0},"end":{"row":57,"column":12},"action":"remove","lines":["","// Most landings","","int mostLandings(const vector <int> &gameBoard, int startInterval, ","int endInterval)","{","  int mostLandings;","  ","  for (int i = startInterval; i <= endInterval; i++)","  {","    if (gameBoard.at(i) > mostLandings) ","    {","      mostLandings = gameBoard.at(i);","    }","  }","  ","  return mostLandings;","}","","","","// Execution"],"id":1}],[{"start":{"row":46,"column":1},"end":{"row":82,"column":3},"action":"remove","lines":[" // User entry prompts","  ","  cout << \"How many sides of the board are there? \";","  cin >> sidesOnBoard;","  cout << endl << endl;","  ","  cout << \"How many spots are on each side? \";","  cin >> spotsEachSide;","  cout << endl << endl;","  ","  cout << \"How many simulations? \";","  cin >> numSimulations;","  cout << endl << endl;","  ","  // Calculations","  ","  numSpots = sidesOnBoard * spotsEachSide;","  vector <int> gameBoard(numSpots, 0);","  ","  ","  for (int i = 1; i <= numSimulations; i++)","  {","    do","    {","      diceRoll += rollNDice(numDice, numSidesOnDice);","      ","      gameBoard.at(diceRoll)++;","    }","    while (diceRoll < numSpots);","  }","  ","  for (int i = 0; i < numSpots - 1; i += spotsEachSide)","  {","    cout << \"The following spots on each side have the most landings:\" << endl","    << \"On side \" << i + 1 << \", spot YADA has the most landings: \" ","    << mostLandings(gameBoard, i, i + spotsEachSide - 1) << endl;","  }"],"id":2}],[{"start":{"row":46,"column":1},"end":{"row":57,"column":53},"action":"insert","lines":["","  // Dice roll test","  ","  cout << \"Enter numDice: \";","  cin >> numDice;","  cout << endl;","  ","  cout << \"Enter numSidesOnDice: \";","  cin >> numSidesOnDice;","  cout << endl;","  ","  cout << rollNDice(numDice, numSidesOnDice) << endl;"],"id":3}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":47,"column":19},"end":{"row":47,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1425446241000,"hash":"e04b585d80a76bfa4e75c62ce4350c70a7905263"}